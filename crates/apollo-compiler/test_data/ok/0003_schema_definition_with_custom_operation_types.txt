Schema {
    sources: {
        1: SourceFile {
            path: "built_in.graphql",
            source_text: include_str!("built_in.graphql"),
        },
        5: SourceFile {
            path: "0003_schema_definition_with_custom_operation_types.graphql",
            source_text: "schema {\n  query: customPetQuery,\n  subscription: customPetSubscription\n  mutation: customPetMutation\n}\n\nenum PetType {\n  CAT,\n  DOG,\n}\n\ntype customPetQuery {\n  name: String,\n  age: Int\n}\n\ntype customPetSubscription {\n  changeInPetHousehold: Result\n}\n\ntype customPetMutation {\n  addPet (name: String!, petType: PetType): Result!\n}\n\ntype Result {\n  id: String\n}\n",
        },
    },
    schema_definition: 0..103 @5 SchemaDefinition {
        description: None,
        directives: [],
        query: Some(
            ComponentName {
                origin: Definition,
                name: "customPetQuery",
            },
        ),
        mutation: Some(
            ComponentName {
                origin: Definition,
                name: "customPetMutation",
            },
        ),
        subscription: Some(
            ComponentName {
                origin: Definition,
                name: "customPetSubscription",
            },
        ),
    },
    directive_definitions: {
        "skip": built_in_directive!("skip"),
        "include": built_in_directive!("include"),
        "deprecated": built_in_directive!("deprecated"),
        "specifiedBy": built_in_directive!("specifiedBy"),
    },
    types: {
        "__Schema": built_in_type!("__Schema"),
        "__Type": built_in_type!("__Type"),
        "__TypeKind": built_in_type!("__TypeKind"),
        "__Field": built_in_type!("__Field"),
        "__InputValue": built_in_type!("__InputValue"),
        "__EnumValue": built_in_type!("__EnumValue"),
        "__Directive": built_in_type!("__Directive"),
        "__DirectiveLocation": built_in_type!("__DirectiveLocation"),
        "Int": built_in_type!("Int"),
        "Float": built_in_type!("Float"),
        "String": built_in_type!("String"),
        "Boolean": built_in_type!("Boolean"),
        "ID": built_in_type!("ID"),
        "PetType": Enum(
            105..135 @5 EnumType {
                description: None,
                name: "PetType",
                directives: [],
                values: {
                    "CAT": Component {
                        origin: Definition,
                        node: 122..125 @5 EnumValueDefinition {
                            description: None,
                            value: "CAT",
                            directives: [],
                        },
                    },
                    "DOG": Component {
                        origin: Definition,
                        node: 129..132 @5 EnumValueDefinition {
                            description: None,
                            value: "DOG",
                            directives: [],
                        },
                    },
                },
            },
        ),
        "customPetQuery": Object(
            137..187 @5 ObjectType {
                description: None,
                name: "customPetQuery",
                implements_interfaces: {},
                directives: [],
                fields: {
                    "name": Component {
                        origin: Definition,
                        node: 161..173 @5 FieldDefinition {
                            description: None,
                            name: "name",
                            arguments: [],
                            ty: Named(
                                "String",
                            ),
                            directives: [],
                        },
                    },
                    "age": Component {
                        origin: Definition,
                        node: 177..185 @5 FieldDefinition {
                            description: None,
                            name: "age",
                            arguments: [],
                            ty: Named(
                                "Int",
                            ),
                            directives: [],
                        },
                    },
                },
            },
        ),
        "customPetSubscription": Object(
            189..250 @5 ObjectType {
                description: None,
                name: "customPetSubscription",
                implements_interfaces: {},
                directives: [],
                fields: {
                    "changeInPetHousehold": Component {
                        origin: Definition,
                        node: 220..248 @5 FieldDefinition {
                            description: None,
                            name: "changeInPetHousehold",
                            arguments: [],
                            ty: Named(
                                "Result",
                            ),
                            directives: [],
                        },
                    },
                },
            },
        ),
        "customPetMutation": Object(
            252..330 @5 ObjectType {
                description: None,
                name: "customPetMutation",
                implements_interfaces: {},
                directives: [],
                fields: {
                    "addPet": Component {
                        origin: Definition,
                        node: 279..328 @5 FieldDefinition {
                            description: None,
                            name: "addPet",
                            arguments: [
                                287..300 @5 InputValueDefinition {
                                    description: None,
                                    name: "name",
                                    ty: 293..300 @5 NonNullNamed(
                                        "String",
                                    ),
                                    default_value: None,
                                    directives: [],
                                },
                                302..318 @5 InputValueDefinition {
                                    description: None,
                                    name: "petType",
                                    ty: 311..318 @5 Named(
                                        "PetType",
                                    ),
                                    default_value: None,
                                    directives: [],
                                },
                            ],
                            ty: NonNullNamed(
                                "Result",
                            ),
                            directives: [],
                        },
                    },
                },
            },
        ),
        "Result": Object(
            332..360 @5 ObjectType {
                description: None,
                name: "Result",
                implements_interfaces: {},
                directives: [],
                fields: {
                    "id": Component {
                        origin: Definition,
                        node: 348..358 @5 FieldDefinition {
                            description: None,
                            name: "id",
                            arguments: [],
                            ty: Named(
                                "String",
                            ),
                            directives: [],
                        },
                    },
                },
            },
        ),
    },
}
ExecutableDocument {
    sources: {
        1: SourceFile {
            path: "built_in.graphql",
            source_text: include_str!("built_in.graphql"),
        },
        5: SourceFile {
            path: "0003_schema_definition_with_custom_operation_types.graphql",
            source_text: "schema {\n  query: customPetQuery,\n  subscription: customPetSubscription\n  mutation: customPetMutation\n}\n\nenum PetType {\n  CAT,\n  DOG,\n}\n\ntype customPetQuery {\n  name: String,\n  age: Int\n}\n\ntype customPetSubscription {\n  changeInPetHousehold: Result\n}\n\ntype customPetMutation {\n  addPet (name: String!, petType: PetType): Result!\n}\n\ntype Result {\n  id: String\n}\n",
        },
    },
    anonymous_operation: None,
    named_operations: {},
    fragments: {},
}
