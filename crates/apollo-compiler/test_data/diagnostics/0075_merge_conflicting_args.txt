[
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 711,
            length: 33,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 690,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 727,
                    length: 16,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 674,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 711,
                length: 33,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 711,
            length: 33,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 690,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 727,
                    length: 16,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 674,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 711,
                length: 33,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 838,
            length: 40,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 817,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 854,
                    length: 23,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 801,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 838,
                length: 40,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 838,
            length: 40,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 817,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 854,
                    length: 23,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 801,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 838,
                length: 40,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 447,
            length: 31,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 447,
                    length: 31,
                },
                text: "fragment `conflictingArgsValueWithVars` is not defined",
            },
        ],
        help: None,
        data: UndefinedFragment {
            name: "conflictingArgsValueWithVars",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 389,
            length: 19,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 389,
                    length: 19,
                },
                text: "this variable is never used",
            },
        ],
        help: None,
        data: UnusedVariable {
            name: "varOne",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 410,
            length: 19,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 410,
                    length: 19,
                },
                text: "this variable is never used",
            },
        ],
        help: None,
        data: UnusedVariable {
            name: "varTwo",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1090,
            length: 15,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1069,
                    length: 15,
                },
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1090,
                    length: 15,
                },
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1053,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1090,
                length: 15,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1090,
            length: 15,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1069,
                    length: 15,
                },
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1090,
                    length: 15,
                },
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1053,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1090,
                length: 15,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1174,
            length: 18,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1164,
                    length: 4,
                },
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1174,
                    length: 18,
                },
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1151,
                length: 18,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1174,
                length: 18,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1174,
            length: 18,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1164,
                    length: 4,
                },
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1174,
                    length: 18,
                },
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1151,
                length: 18,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1174,
                length: 18,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 886,
            length: 127,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 886,
                    length: 127,
                },
                text: "`conflictingArgsWithVars` is defined here",
            },
        ],
        help: Some(
            "fragment `conflictingArgsWithVars` must be used in an operation",
        ),
        data: UnusedFragment {
            name: "conflictingArgsWithVars",
        },
    },
]
