[
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 570,
            length: 33,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 551,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 586,
                    length: 16,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 535,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 570,
                length: 33,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 689,
            length: 40,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 670,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 705,
                    length: 23,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 654,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 689,
                length: 40,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 717,
            length: 11,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 717,
                    length: 11,
                },
                text: "not found in this scope",
            },
        ],
        help: None,
        data: UndefinedDefinition {
            name: "dogCommand",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 336,
            length: 31,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 336,
                    length: 31,
                },
                text: "fragment `conflictingArgsValueWithVars` is not defined",
            },
        ],
        help: None,
        data: UndefinedFragment {
            name: "conflictingArgsValueWithVars",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 925,
            length: 15,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 906,
                    length: 15,
                },
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 925,
                    length: 15,
                },
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 890,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 925,
                length: 15,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1001,
            length: 18,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 993,
                    length: 4,
                },
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1001,
                    length: 18,
                },
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 980,
                length: 18,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1001,
                length: 18,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 570,
            length: 33,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 551,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 586,
                    length: 16,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 535,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 570,
                length: 33,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 689,
            length: 40,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 670,
                    length: 15,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 705,
                    length: 23,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 654,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 689,
                length: 40,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 816,
            length: 36,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 793,
                    length: 19,
                },
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 832,
                    length: 19,
                },
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 777,
                length: 36,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 816,
                length: 36,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 733,
            length: 121,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 733,
                    length: 121,
                },
                text: "`conflictingArgsWithVars` is defined here",
            },
        ],
        help: Some(
            "fragment `conflictingArgsWithVars` must be used in an operation",
        ),
        data: UnusedFragment {
            name: "conflictingArgsWithVars",
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 925,
            length: 15,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 906,
                    length: 15,
                },
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 925,
                    length: 15,
                },
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 890,
                length: 32,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 925,
                length: 15,
            },
        },
    },
    ApolloDiagnostic {
        cache: {
            0: "built_in_types.graphql",
            72: "0075_merge_conflicting_args.graphql",
        },
        location: DiagnosticLocation {
            file_id: FileId {
                id: 72,
            },
            offset: 1001,
            length: 18,
        },
        labels: [
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 993,
                    length: 4,
                },
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: DiagnosticLocation {
                    file_id: FileId {
                        id: 72,
                    },
                    offset: 1001,
                    length: 18,
                },
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 980,
                length: 18,
            },
            redefined_selection: DiagnosticLocation {
                file_id: FileId {
                    id: 72,
                },
                offset: 1001,
                length: 18,
            },
        },
    },
]
